{"name":"jQuery-vs-repeat","tagline":"Virtual Scroll plugin for jQuery","body":"jquery-vs-repeat v0.0.1\r\n=================\r\n\r\nVirtual Scroll plugin for jQuery\r\n\r\n###DESCRIPTION:\r\n`vsRepeat` stands for **Virtual Scroll Repeat**. It turns a standard scrollable container\r\ninto a component, where the user thinks he has all the elements rendered and all he needs to do is scroll (without any kind of\r\npagination - which most users loath) and at the same time the browser isn't overloaded by that many elements.\r\nThe plugin renders only so many elements that can fit into current container's `clientHeight`/`clientWidth`.\r\n\r\n###USAGE:\r\n\r\n```html\r\n<div id=\"container\">\r\n\t<div class=\"item\">\r\n\t\t<div>\r\n\t\t\t#text#\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<small>\r\n\t\t\t\t#description#\r\n\t\t\t</small>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n```\r\n\r\n```javascript\r\nvar data = [\r\n\t{\"text\": \"item 1\", \"description\": \"description 1\", \"size\": \"35\"},\r\n\t{\"text\": \"item 2\", \"description\": \"description 2\", \"size\": \"40\"},\r\n\t{\"text\": \"item 3\", \"description\": \"description 3\", \"size\": \"50\"},\r\n\t{\"text\": \"item 4\", \"description\": \"description 4\", \"size\": \"35\"},\r\n\t{\"text\": \"item 5\", \"description\": \"description 5\", \"size\": \"40\"}\r\n];\r\n$('#container').vsRepeat({\r\n\tdata         : data,\t\t// required\r\n\toffsetBefore : 50,\t\t\t// optional\r\n\toffsetAfter  : 50,\t\t\t// optional\r\n\texcess       : 0,\t\t\t// optional\r\n\tsizeProperty : 'size',\t\t// optional\r\n\tdirection    : 'horizontal',// optional (default: vertical)\r\n\tonRender     : function(element, index, startIndex, endIndex){\r\n\t\tif((index + startIndex) % 2)\r\n\t\t\telement.css('background', 'gray');\r\n\t}\r\n});\r\n```\r\n\r\nThe `sizeProperty` is optional along with the actual `size` property in `data` array. If provided the plugin assumes, that's the element height/width. If not all items are assumed to have the same height/width.\r\n\r\nThe 'onRender' function is also optional. If provided the plugin will call it for each element when it gets rendered into the DOM with the following arguments:\r\n  * `element` - the jQuery object of that element,\r\n  * `index` - the index of the element in the current subset of the array\r\n  * `startIndex` - the index of the first rendered item\r\n  * `endIndex` - the index of the first item that is NOT rendered\r\n\r\nNOTE: the actual index of the element in the original data array is `startIndex + index`.\r\n\r\nIMPORTANT: if you are using [AngularJS](https://angularjs.org) in your project please use my [angular-vs-repeat](https://github.com/kamilkp/angular-vs-repeat) library.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}